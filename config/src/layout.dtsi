//

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "layout.h"

/* MACROS */
#define WIN_TEAMS_MUTE LC(LS(M)) // Windows - Teams - Toggle Mute (Should be tested) // Ctrl + Shift + M
#define WIN_SCR LG(LS(S)) // Windows - Screenshot // Win + Shift + S

HOLD_TAP(hm_fr_u_circumflex, 175, &kp, &fr_u_circumflex)

/* Hold K and L for ' (in qwerty) */
COMBO_KEY(combo_kl_sqt, 20 21, &kp SQT, U_BASE)
/* Hold S and D for ` (in qwerty) */
COMBO_KEY(combo_sd_grave, 14 15, &kp GRAVE, U_BASE)
/* Hold R and U for caps_word (in qwerty) */
COMBO_KEY(combo_r_u_caps_word, 4 7, &caps_word, U_BASE)
/* Hold V and M for ESC (in qwerty) */
COMBO_KEY(combo_b_n_escape, 28 31, &kp ESC, U_BASE)
/* Hold C and , for FUNC layer (in qwerty) */
COMBO_KEY(combo_c_coma_to_layer_function, 27 32, &to U_FUN, U_BASE U_FUN)

DOUBLE_TAP(dt_next_prev, 200, &kp C_NEXT, &kp C_PREV)

&sl {
    release-after-ms = <1500>;
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    adjust_layer {
      if-layers = <U_NAV U_SYM>;
      then-layer = <U_ADJUST>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
#define MIRYOKU_X(LAYER, STRING) \
    LAYER { \
      label = STRING; \
      bindings = < U_MACRO_VA_ARGS(MIRYOKU_LAYERMAPPING_##LAYER, MIRYOKU_LAYER_##LAYER) >; \
    };
MIRYOKU_LAYER_LIST
#undef MIRYOKU_X
  };
};

#include "helpers.h"
#include "shift_functions.dtsi"
#include "diacritics.dtsi"
#include "behaviors.dtsi"
