/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "../src/corne.dtsi"

/* LAYERS */
#define BASE       0
#define SYM        1
#define NUM        2
#define NAV    3
#define FUNC       4
#define SHORTCUTS  5
#define ADJUST     6

/* MACROS */
#define WIN_TEAMS_MUTE LC(LS(M)) // Windows - Teams - Toggle Mute (Should be tested) // Ctrl + Shift + M
#define WIN_SCR LG(LS(S)) // Windows - Screenshot // Win + Shift + S

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    shortcuts_layer {
      if-layers = <NAV SYM>;
      then-layer = <SHORTCUTS>;
    };
    adjust_layer {
      if-layers = <NUM FUNC>;
      then-layer = <ADJUST>;
    };
  };

  combos {
    compatible = "zmk,combos";
    combo_sqt {
        timeout-ms = <50>;
        // Hold K and L (in qwerty)
        key-positions = <20 21>;
        bindings = <&kp SQT>;
        layers = < 0 >
    };

    combo_grave {
        timeout-ms = <50>;
        // Hold S and D (in qwerty)
        key-positions = <14 15>;
        bindings = <&kp GRAVE>;
        layers = < 0 >
    };
  };

  behaviors {
    // https://precondition.github.io/home-row-mods
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <175>; // Sweet spot between 150 and 220
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    NEXT_PREV: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp C_NEXT>, <&kp C_PREV>;
    };
    COMMA_DOT: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp COMMA>, <&kp DOT>;
    };
    STAR_SLASH: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp STAR>, <&kp SLASH>;
    };
    PLUS_MINUS: tap_dance_3 {
      compatible = "zmk,behavior-tap-dance";
      label = "NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp PLUS>, <&kp MINUS>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  | Q         | W         | E          |  R          |  T  |   |  Y  | U           |  I         |  O        |  P        |  |
// |  | A -> LGUI | S -> LALT | D -> LCTRL | F -> LSHIFT |  G  |   |  H  | J -> RSHIFT | K -> RCTRL | L -> RALT | ; -> RGUI |  |
// |  | Z         | X         | C          |  V          |  B  |   |  N  | M           |  ,         |  .        |  /        |  |
//                      | ESC | TAB -> NUM | SPC -> NAV  |   | ENT -> SYM | BSPC -> FUNC | DEL |
//
      label = "QWERTY";
      bindings = <
&none &kp Q       &kp W       &kp E       &kp R         &kp T   &kp Y &kp U         &kp I       &kp O       &kp P         &none
&none &hm LGUI A  &hm LALT S  &hm LCTRL D &hm LSHIFT F  &kp G   &kp H &hm RSHIFT J  &hm RCTRL K &hm RALT L  &hm RGUI SEMI &none
&none &kp Z       &kp X       &kp C       &kp V         &kp B   &kp N &kp M         &kp COMMA   &kp DOT     &kp FSLH      &none
                &kp ESC &lt NUM TAB  &lt NAV SPACE   &lt SYM RET &lt FUNC BSPC  &kp DEL
      >;
    };

    symbol_layer {
// -----------------------------------------------------------------------------------------
// |  |  !        |   @       |     #      |     $       |  %  |   |  ^  |   &         |    *       |    (      |     )     |  |
// |  | { -> LGUI | ( -> LALT | ) -> LCTRL | } -> LSHIFT |  =  |   |  +  | - -> RSHIFT | [ -> RCTRL | ] -> RALT | ; -> RGUI |  |
// |  |     ~     |     `     |     "|"    |     _       |  /  |   |  \  |      @      |     <      |     >     |     ?     |  |
//                                          |  | ESC -> NUM |  |   |  |  |  |
      label = "SYMBOL";
      bindings = <
&none &kp EXCL      &kp AT        &kp HASH       &kp DLLR         &kp PRCNT     &kp CARET      &kp AMPS         &kp STAR        &kp LPAR      &kp RPAR      &none
&none &hm LGUI LBRC &hm LALT LPAR &hm LCTRL RPAR &hm LSHIFT RBRC  &kp EQUAL     &kp PLUS       &hm RSHIFT MINUS &hm RCTRL RBKT  &hm RALT RBRC &hm RGUI SEMI &none
&none &kp TILDE     &kp GRAVE     &kp PIPE       &kp UNDER        &kp SLASH     &kp BACKSLASH  &kp AT           &kp LT          &kp GT        &kp QMARK     &none
                       &trans &lt NUM ESC   &trans   &trans   &trans    &trans
      >;
    };

    number_layer {
// -----------------------------------------------------------------------------------------
// |  |   1  |   2  |   3   |    4   | 5 |   |     6     |  7  |  8  |  9  |      0     |  |
// |  | LGUI | LALT | LCTRL | LSHIFT |   |   |     =     |  4  |  5  |  6  | STAR_SLASH |  |
// |  |      |      |       |        |   |   | COMMA_DOT |  1  |  2  |  3  | PLUS_MINUS |  |
//                              |  |  |  |   |  | 0 -> FUNC |  |
      label = "NUMBER";
      bindings = <
&none  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5       &kp N6      &kp N7  &kp N8  &kp N9  &kp N0      &none
&none  &kp LGUI   &kp LALT   &kp LCTRL &kp LSHIFT &none        &kp EQUAL   &kp N4  &kp N5  &kp N6  &STAR_SLASH &none
&none  &none      &none      &none     &none      &none        &COMMA_DOT  &kp N1  &kp N2  &kp N3  &PLUS_MINUS &none
                       &trans &trans &trans   &trans &lt FUNC N0 &trans
      >;
    };

    navigation_layer {
// -----------------------------------------------------------------------------------------
// |  |      |      | CAPSLOCK |   "         | ^ |   | Redo | Paste | Copy  | Cut   | Undo |  |
// |  | LGUI | LALT | LCTRL    | ' -> LSHIFT | ' |   | Left | Down  | Up    | Right |      |  |
// |  |      |      |          |    `        | ` |   | Home | PG_DN | PG_UP | END   |      |  |
//                                      |  |  |  |   |  | DEL -> FUNC |  |
      label = "NAV";
      bindings = <
&none &none    &none    &u_caps_word  &kp DOUBLE_QUOTES  &kp CARET     &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO  &none
&none &kp LGUI &kp LALT &kp LCTRL     &hm LSHIFT SQT         &kp SQT       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none       &none
&none &none    &none    &none         &kp GRAVE              &kp GRAVE     &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none       &none
                                           &trans &trans &trans        &trans &lt FUNC DEL &trans
      >;
    };

    function_layer {
// -----------------------------------------------------------------------------------------
// |  | F12 | F7 | F8 | F9 |       |   |  |        |       |      |      |  |
// |  | F11 | F4 | F5 | F6 |       |   |  | RSHIFT | RCTRL | RALT | RGUI |  |
// |  | F10 | F1 | F2 | F3 | K_APP |   |  |        |       |      |      |  |
//                        |  |  |  |   |  |        |       |
      label = "FUNCTN";
      bindings = <
&none &kp F12 &kp F7 &kp F8 &kp F9 &none       &none &none      &none      &none    &none    &none
&none &kp F11 &kp F4 &kp F5 &kp F6 &none       &none &kp RSHIFT &kp  RCTRL &kp RALT &kp RGUI &none
&none &kp F10 &kp F1 &kp F2 &kp F3 &kp K_APP   &none &none      &none      &none    &none    &none
                       &trans &trans &trans    &trans &trans &trans
      >;
    };

    shortcuts_layer {
// -----------------------------------------------------------------------------------------
// |  |  |  |         |                |  |   |      |            |       |       |           |  |
// |  |  |  | WIN_SCR | WIN_TEAMS_MUTE |  |   | Mute | Play/Pause | Vol - | Vol + | Prev/Next |  |
// |  |  |  |         |                |  |   |      |            |       |       |           |  |
//                               |  |  |  |   |  |  |  |
      label = "SHRTCT";
      bindings = <
&none &none &none &none       &none               &none     &none       &none             &none         &none         &none       &none
&none &none &none &kp WIN_SCR &kp WIN_TEAMS_MUTE  &none     &kp K_MUTE  &kp C_PLAY_PAUSE  &kp C_VOL_DN  &kp C_VOL_UP  &NEXT_PREV  &none
&none &none &none &none       &none               &none     &none       &none             &none         &none         &none       &none
                              &trans &trans   &trans   &trans   &trans    &trans
      >;
    };

    adjust_layer {
// -----------------------------------------------------------------------------------------
// |  |      |      |       | OUT_TOG | EP toggle |   | BT0 | BT1 | BT2 | BT3 | BT4 |  |
// |  | LGUI | LALT | LCTRL | LSHIFT  |           |   |     |     |     |     |     |  |
// |  |      |      |       |         |           |   |     |     |     |     |     |  |
//                                       |  |  |  |   |  |  |  |
      label = "ADJUST";
      bindings = <
&none &none    &none    &none     &u_out_tog &u_ep_tog &u_bt_sel_0  &u_bt_sel_1 &u_bt_sel_2 &u_bt_sel_3  &u_bt_sel_4  &none
&none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none     &none        &none       &none       &none        &none        &none
&none &none    &none    &none     &none      &none     &none        &none       &none       &none        &none        &none
                              &trans &trans   &trans   &trans   &trans    &trans
      >;
    };
  };
};
