/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "./src/corne.dtsi"

/* LAYERS */
#define BASE       0
#define SYM        1
#define DIA        2
#define NAV        3
#define FUN        4
#define ADJUST     5

/* MACROS */
#define WIN_TEAMS_MUTE LC(LS(M)) // Windows - Teams - Toggle Mute (Should be tested) // Ctrl + Shift + M
#define WIN_SCR LG(LS(S)) // Windows - Screenshot // Win + Shift + S

/* https://precondition.github.io/home-row-mods */
HOLD_TAP(hm, 175, &kp, &kp)
HOLD_TAP(hm_fr_u_circumflex, 175, &kp, &fr_u_circumflex)

/* Hold K and L for ' (in qwerty) */
COMBO_KEY(combo_kl_sqt, 20 21, &kp SQT, BASE)
/* Hold S and D for ` (in qwerty) */
COMBO_KEY(combo_sd_grave, 14 15, &kp GRAVE, BASE)
/* Hold A and ; for ESC (in qwerty) */
// COMBO_KEY(combo_a_semi_colon_escape, 14 25, &kp ESC, BASE)
/* Hold Z and / for caps_word (in qwerty) */
COMBO_KEY(combo_z_slash_caps_word, 26 35, &caps_word, BASE)

/* Hold both middle thumb key for function layer */
COMBO_KEY(combo_middle_thumbs_function_layer, 38 41, &mo FUN, -1)

DOUBLE_TAP(next_prev, 200, &kp C_NEXT, &kp C_PREV)

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    adjust_layer {
      if-layers = <NAV SYM>;
      then-layer = <ADJUST>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  | Q         | W         | E          |  R          |  T  |   |  Y  | U           |  I         |  O        |  P        |  |
// |  | A -> LGUI | S -> LALT | D -> LCTRL | F -> LSHIFT |  G  |   |  H  | J -> RSHIFT | K -> RCTRL | L -> RALT | ; -> DIA |  |
// |  | Z         | X         | C          |  V          |  B  |   |  N  | M           |  ,         |  .        |  /        |  |
//                            | ESC | TAB -> LSHIFT | SPC -> NAV  |   | ENT -> SYM | BSPC | DEL |
//
      label = "QWERTY";
      bindings = <
&none &kp Q       &kp W       &kp E       &kp R         &kp T   &kp Y &kp U         &kp I       &kp O       &kp P         &none
&none &hm LGUI A  &hm LALT S  &hm LCTRL D &hm LSHIFT F  &kp G   &kp H &hm RSHIFT J  &hm RCTRL K &hm RALT L  &hm DIA SEMI &none
&none &kp Z       &kp X       &kp C       &kp V         &kp B   &kp N &kp M         &kp COMMA   &kp DOT     &kp FSLH      &none
                &kp ESC &hm LSHIFT TAB  &lt NAV SPACE   &lt SYM RET &kp BSPC  &kp DEL
      >;
    };

    symbol_layer {
// -----------------------------------------------------------------------------------------
// |  | @ | < | > | $ | % |   |  ^  | & | * | ' | ` |  |
// |  | { | ( | ) | } | = |   |  \  | + | - | / | " |  |
// |  | ~ | [ | ] | _ | # |   | "|" | ! | ; | : | ? |  |
//               |  |  |  |   |  |  |  |
      label = "SYMBOL";
      bindings = <
&none &kp AT    &kp LT   &kp GT   &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS &kp STAR  &kp SQT   &kp GRAVE &none
&none &kp LBRC  &kp LPAR &kp RPAR &kp RBRC  &kp EQUAL    &kp BSLH  &kp PLUS &kp MINUS &kp SLASH &kp DQT   &none
&none &kp TILDE &kp LBKT &kp RBKT &kp UNDER &kp HASH     &kp PIPE  &kp EXCL &kp SEMI  &kp COLON &kp QMARK &none
                                &trans &trans &trans   &trans &trans &trans
      >;
    };

    diacritics_layer {
// -----------------------------------------------------------------------------------------
// |  |   | é | è |        |   |   |  |             |   |   |  |  |
// |  | à |   | ê | LSHIFT |   |   |  | û -> RSHIFT | î | ô |  |  |
// |  | â |   | ç |        |   |   |  |             |   |   |  |  |
//                              |  |  |  |   |  |  |  |
      label = "ACCENTS";
      bindings = <
&none  &none            &fr_e_acute &fr_e_grave      &none      &none        &none  &none                         &fr_u_grave      &none            &none      &none
&none  &fr_a_grave      &none       &fr_e_circumflex &kp LSHIFT &none        &none  &hm_fr_u_circumflex RSHIFT 0  &fr_i_circumflex &fr_o_circumflex &none      &none
&none  &fr_a_circumflex &none       &fr_c_cedilla    &none      &none        &none  &none                         &none            &none            &none      &none
                       &trans &trans &trans   &trans &trans &trans
      >;
    };

    navigation_layer {
// -----------------------------------------------------------------------------------------
// |  | ESC  | Home |  Up  | End   | PG_UP |   |  =  | 7           | 8          | 9         | -         |  |
// |  | LGUI | Left | Down | Right | PG_DN |   |  *  | 4 -> RSHIFT | 5 -> RCTRL | 6 -> RALT | 0 -> RGUI |  |
// |  | Undo | Cut  | Copy | Paste |  Del  |   |  ,  | 1           | 2          | 3         | .         |  |
//                                    |  |  |  |   |  |  |  |
      label = "NAV";
      bindings = <
&none &kp ESC   &kp HOME  &kp UP    &kp END    &kp PG_UP    &kp EQUAL &kp N7         &kp N8       &kp N9      &kp MINUS   &none
&none &kp LGUI  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN    &kp STAR  &hm RSHIFT N4  &hm RCTRL N5 &hm RALT N6 &hm RGUI N0 &none
&none &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &kp DEL      &kp COMMA &kp N1         &kp N2       &kp N3      &kp DOT     &none
                                   &trans &trans &trans     &trans &trans &trans
      >;
    };

    function_layer {
// -----------------------------------------------------------------------------------------
// |  | F12 | F7 | F8 | F9 |       |   |   |  |  |  |  |  |
// |  | F11 | F4 | F5 | F6 |       |   |   |  |  |  |  |  |
// |  | F10 | F1 | F2 | F3 | K_APP |   |   |  |  |  |  |  |
//                        |  |  |  |   |  |  |  |
      label = "FUNC";
      bindings = <
&none &kp F12 &kp F7 &kp F8 &kp F9 &none       &none &none &none &none &none &none
&none &kp F11 &kp F4 &kp F5 &kp F6 &none       &none &none &none &none &none &none
&none &kp F10 &kp F1 &kp F2 &kp F3 &kp K_APP   &none &none &none &none &none &none
                       &trans &trans &trans    &trans &trans &trans
      >;
    };

    adjust_layer {
// -----------------------------------------------------------------------------------------
// |  |    BT0    |  BT1  | BT2 |  BT3   |   BT4   |   |      |            |       |       |           |  |
// |  | OUT_TOG   | Reset |     | LSHIFT |         |   | Mute | Play/Pause | Vol - | Vol + | Prev/Next |  |
// |  |           | Flash |     |        | WIN_SCR |   |  WIN_TEAMS_MUTE   |       |       |           |  |
//                                   |  |  |  |   |  |  |  |
      label = "ADJUST";
      bindings = <
&none &u_bt_sel_0 &u_bt_sel_1 &u_bt_sel_2 &u_bt_sel_3 &u_bt_sel_4 &none               &none             &none         &none         &none      &none
&none &u_out_tog  &sys_reset  &none       &kp LSHIFT  &none       &kp K_MUTE          &kp C_PLAY_PAUSE  &kp C_VOL_DN  &kp C_VOL_UP  &next_prev &none
&none &none       &bootloader &none       &none       &kp WIN_SCR &kp WIN_TEAMS_MUTE  &none             &none         &none         &none      &none
                              &trans &trans   &trans   &trans   &trans    &trans
      >;
    };
  };
};
